version: '3'

services:
  api: # Back-end Node.js
    container_name: api
    build: .
    ports:
      - "3000:3000"
    environment:
      - ES_HOST=elasticsearch
      - NODE_ENV=development
      - PORT=3000
      - DEBUG=full-text-app:*
    depends_on:
      - mysql
    volumes:
      # - ./discs:/usr/src/app/discs
      - .:/usr/src/app

  frontend:
    container_name: frontend
    image: nginx
    volumes:
      - ./public:/usr/share/nginx/html
      - ./scripts/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    #command: /bin/bash -c "envsubst < /etc/nginx/conf.d/front.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  elasticsearch:
    container_name: searchsystem
    image: docker.elastic.co/elasticsearch/elasticsearch:6.1.1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports:
      - "9300:9300"
      - "9200:9200"

  mysql:
    container_name: mysqldb
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: "mediacollection"
    volumes:
      - mysqldata:/var/lib/mysql
      - ./scripts/dump.sql:/docker-entrypoint-initdb.d/dump.sql
    restart: always
    ports:
      - "7706:3306"

volumes:
  esdata:
  mysqldata: